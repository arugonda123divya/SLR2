import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')
df=pd.read_csv("D:/data science/Assignments/Simple Linear Regression/Salary_Data.csv")
df.boxplot(column="YearsExperience")
plt.scatter(x=df["YearsExperience"],y=df["Salary"])
plt.show()
df.corr()
x=df[["YearsExperience"]]
y=df["Salary"]
from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_
y_pred=lr.predict(x)
y_pred
plt.scatter(x=df["YearsExperience"],y=df["Salary"])
plt.plot(df["YearsExperience"],y_pred,color="r")
from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("mean squared error: ",mse.round(3))
print("root mean squared error: ",np.sqrt(mse).round(3))
import seaborn as sb
sb.distplot(df["YearsExperience"])
fig = plt.figure()

print("\nLog Transformation")
L=[]
import seaborn as sb
L=pd.DataFrame(L)
L["YearsExperience"]=np.log(df["YearsExperience"])
sb.distplot(L["YearsExperience"])
fig = plt.figure()

x=L[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=L["YearsExperience"],y=df["Salary"])
plt.plot(L["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))


print("\nSquare Root Transformation")
sr=[]
import seaborn as sb
sr=pd.DataFrame(sr)
sr["YearsExperience"]=np.sqrt(df["YearsExperience"])
sb.distplot(sr["YearsExperience"])
fig = plt.figure()

x=sr[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=sr["YearsExperience"],y=df["YearsExperience"])
plt.plot(sr["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))



print("\nCubic Root Transformation")
c=[]
import seaborn as sb
c=pd.DataFrame(c)
c["YearsExperience"]=np.log(df["YearsExperience"])
sb.distplot(c["YearsExperience"])
fig = plt.figure()

x=c[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=c["YearsExperience"],y=df["Salary"])
plt.plot(c["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))

print("\nSquare Transformation")
s=[]
import seaborn as sb
s=pd.DataFrame(s)
s["YearsExperience"]=np.power(df["YearsExperience"],2)
sb.distplot(s["YearsExperience"])
fig = plt.figure()

x=s[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=s["YearsExperience"],y=df["Salary"])
plt.plot(s["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))

mean squared error:  31270951.722
root mean squared error:  5592.044

Log Transformation



Mean squared error:  106149618.722
root mean squared error: 10302.894

Square Root Transformation


Mean squared error:  50127755.617
root mean squared error: 7080.096

Cubic Root Transformation


Mean squared error:  106149618.722
root mean squared error: 10302.894

Square Transformation


Mean squared error:  61520040.461
root mean squared error: 7843.471
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')
df=pd.read_csv("D:/data science/Assignments/Simple Linear Regression/Salary_Data.csv")
df
YearsExperience	Salary
0	1.1	39343.0
1	1.3	46205.0
2	1.5	37731.0
3	2.0	43525.0
4	2.2	39891.0
5	2.9	56642.0
6	3.0	60150.0
7	3.2	54445.0
8	3.2	64445.0
9	3.7	57189.0
10	3.9	63218.0
11	4.0	55794.0
12	4.0	56957.0
13	4.1	57081.0
14	4.5	61111.0
15	4.9	67938.0
16	5.1	66029.0
17	5.3	83088.0
18	5.9	81363.0
19	6.0	93940.0
20	6.8	91738.0
21	7.1	98273.0
22	7.9	101302.0
23	8.2	113812.0
24	8.7	109431.0
25	9.0	105582.0
26	9.5	116969.0
27	9.6	112635.0
28	10.3	122391.0
29	10.5	121872.0
df.boxplot(column="YearsExperience")
<AxesSubplot:>
plt.scatter(x=df["YearsExperience"],y=df["Salary"])
plt.show()

df.corr()
YearsExperience	Salary
YearsExperience	1.000000	0.978242
Salary	0.978242	1.000000
x=df[["YearsExperience"]]
y=df["Salary"]
print(x)
y
    YearsExperience
0               1.1
1               1.3
2               1.5
3               2.0
4               2.2
5               2.9
6               3.0
7               3.2
8               3.2
9               3.7
10              3.9
11              4.0
12              4.0
13              4.1
14              4.5
15              4.9
16              5.1
17              5.3
18              5.9
19              6.0
20              6.8
21              7.1
22              7.9
23              8.2
24              8.7
25              9.0
26              9.5
27              9.6
28             10.3
29             10.5
0      39343.0
1      46205.0
2      37731.0
3      43525.0
4      39891.0
5      56642.0
6      60150.0
7      54445.0
8      64445.0
9      57189.0
10     63218.0
11     55794.0
12     56957.0
13     57081.0
14     61111.0
15     67938.0
16     66029.0
17     83088.0
18     81363.0
19     93940.0
20     91738.0
21     98273.0
22    101302.0
23    113812.0
24    109431.0
25    105582.0
26    116969.0
27    112635.0
28    122391.0
29    121872.0
Name: Salary, dtype: float64
from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(x,y)
LinearRegression()
y_pred=lr.predict(x)
y_pred
array([ 36187.15875227,  38077.15121656,  39967.14368085,  44692.12484158,
        46582.11730587,  53197.09093089,  54142.08716303,  56032.07962732,
        56032.07962732,  60757.06078805,  62647.05325234,  63592.04948449,
        63592.04948449,  64537.04571663,  68317.03064522,  72097.0155738 ,
        73987.00803809,  75877.00050238,  81546.97789525,  82491.9741274 ,
        90051.94398456,  92886.932681  , 100446.90253816, 103281.8912346 ,
       108006.87239533, 110841.86109176, 115566.84225249, 116511.83848464,
       123126.81210966, 125016.80457395])
plt.scatter(x=df["YearsExperience"],y=df["Salary"])
plt.plot(df["YearsExperience"],y_pred,color="r")
[<matplotlib.lines.Line2D at 0x1d03321b880>]
from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("mean squared error: ",mse.round(3))
print("root mean squared error: ",np.sqrt(mse).round(3))
mean squared error:  31270951.722
root mean squared error:  5592.044
print("\nLog Transformation")
L=[]
import seaborn as sb
L=pd.DataFrame(L)
L["YearsExperience"]=np.log(df["YearsExperience"])
sb.distplot(L["YearsExperience"])
fig = plt.figure()

x=L[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=L["YearsExperience"],y=df["Salary"])
plt.plot(L["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))
Log Transformation


Mean squared error:  106149618.722
root mean squared error: 10302.894
print("\nSquare Root Transformation")
sr=[]
import seaborn as sb
sr=pd.DataFrame(sr)
sr["YearsExperience"]=np.sqrt(df["YearsExperience"])
sb.distplot(sr["YearsExperience"])
fig = plt.figure()

x=sr[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=sr["YearsExperience"],y=df["YearsExperience"])
plt.plot(sr["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))
Square Root Transformation


Mean squared error:  50127755.617
root mean squared error: 7080.096
print("\nCubic Root Transformation")
c=[]
import seaborn as sb
c=pd.DataFrame(c)
c["YearsExperience"]=np.log(df["YearsExperience"])
sb.distplot(c["YearsExperience"])
fig = plt.figure()

x=c[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=c["YearsExperience"],y=df["Salary"])
plt.plot(c["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))
Cubic Root Transformation


Mean squared error:  106149618.722
root mean squared error: 10302.894
print("\nsquare Transformation")
c=[]
import seaborn as sb
c=pd.DataFrame(c)
c["YearsExperience"]=np.power(df["YearsExperience"],2)
sb.distplot(c["YearsExperience"])
fig = plt.figure()

x=c[["YearsExperience"]]
lr=LinearRegression()
lr.fit(x,y)
lr.intercept_

y_pred=lr.predict(x)

plt.scatter(x=c["YearsExperience"],y=df["Salary"])
plt.plot(c["YearsExperience"],y_pred,color="k")
plt.show()

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y,y_pred)
print("Mean squared error: ",mse.round(3))
print("root mean squared error:",np.sqrt(mse).round(3))
square Transformation


Mean squared error:  61520040.461
root mean squared error: 7843.471
 
From the above applied transformation square root transformation giving the best Root mean squared error
 
 
 
